<div class="page-header">
  <%= link_to fish_index_path, class: 'btn btn-default' do %>
    <span class="glyphicon glyphicon-list-alt"></span>
    Back
  <% end %>
  <%= link_to edit_fish_path(@fish), class: 'btn btn-primary' do %>
    <span class="glyphicon glyphicon-pencil"></span>
    Edit
  <% end %>
  <div class="container">
<div class="row">
  <div class="col-md-8">
    <div class="row">
      <h2><%= @fish.name %></h2>
    </div>
    <div class="row">
      <div class="col-md-6">
        <div class="thumbframe">
          <%= image_tag @fish.photo.url(:med) %>
        </div>
      </div>
      <div class="col-md-6">
        <table class="table">
              <tbody>
              <tr>
                <td>
                  Название:
                </td>
                <td>
                  <%= @fish.name %>
                </td>
              </tr>
              
            </tbody>
           </table>
      </div>
    </div>
    <div class="row">
      <h2>Описание</h2>
      <%= raw(@fish.description) %>
    </div>
    <div class="row fblock" id="map" style='height: 600px;'>
  </div>

  <div class="col-md-4">
    <div class="row"><h2></h2></div>
      <div class="row">
          <table class="table">
            <tbody>
              
              
              
            </tbody>
          </table>
      </div>
  </div>
</div>
</div>

<script type="text/javascript">
 var handler = Gmaps.build('Google');
 var bounds = new google.maps.LatLngBounds();
 var markers; 
  handler.buildMap({ provider: { }, internal: {id: 'map'}}, function(){
    var json_data = [
      
        <% Trophy.where(fish_id: @fish.id).each do |trophy| %>
        {
            id:  <%= trophy.id %>,
            <% if !trophy.lat.nil? %>
              lat: <%= trophy.lat %>,
              lng: <%= trophy.lng %>,
            <% else %>
              lat: 55.7500,
              lng: 37.6167,
            <% end %>
            
            description: "<%= small_trophy_badge(trophy).gsub(/\n/," ") %>" //this html is properly disaplayed
        },
        <% end %>
      
    ];

    //create draggable markers (pass google maps options aas a second arg)
    markers = handler.addMarkers(json_data);

    //add markers to original json
    _.each(json_data, function(json, index){
      json.marker = markers[index];
    });

    //add dragend event to markers, triggered when you drop them
    _.each(json_data, function(json){
      google.maps.event.addListener(json.marker.getServiceObject(), "click", function(event) {
        var infowindow = new google.maps.InfoWindow();
        infowindow.setPosition(event.latLng);
        var lng = event.latLng.lng();
        infowindow.setContent(json.description)
        infowindow.open(handler);
      });
    });
  });
  
  
    for(i=0;i<markers.length;i++) {
     bounds.extend(markers[i].getPosition());
    }

    handler.fitBounds(bounds);

  
  
</script>
